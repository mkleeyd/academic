buildscript {
	ext {
		queryDslVersion = "4.4.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
// 1. ascii doctor 플러그인 설정_Spring Rest Docs
//	id 'org.asciidoctor.convert' version "1.5.3" // (1)
	id "org.asciidoctor.convert" version "1.5.9.2"

}

group = 'management'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

// 2. asciidoctor Task 설정_Spring Rest Docs
asciidoctor {
	dependsOn test
}

// 3. bootJar Task 설정_Spring Rest Docs
bootJar {
	dependsOn asciidoctor
	from ("${asciidoctor.outputDir}/html5") {
		into "static/docs"
	}
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'	// validation 어노테이션 사용 가능
	// 서버 재시작 없이 html 탬플릿 컴파일
	implementation 'org.springframework.boot:spring-boot-devtools'
	// 스프링 시큐리티 라이브러리 의존성들 땡겨오기
	implementation 'org.springframework.boot:spring-boot-starter-security'
	// 스프링 시큐리티 + 토큰 기반 인증 방식(JWT)를 사용하기 위한 라이브러리
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	// 스프링 시큐리티 + thymeleaf 를 이용하기 위한 라이브러리
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
	// thymeleaf 를 이용한 레이아웃 라이브러리 사용하기(구성 ==> 상단, 바텀, 컨텐츠영역, 사이드바)
	implementation group: 'com.github.zhanhb', name: 'thymeleaf-layout-dialect', version: '2.4.1'
	// SQl 쿼리문, 파라미터 log로 보기(이것만 해놓고 show sql 이런 것은 빼도 됨)
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'


	implementation('org.projectlombok:lombok')
	testImplementation('org.projectlombok:lombok')
	annotationProcessor('org.projectlombok:lombok')
	testAnnotationProcessor('org.projectlombok:lombok')

    implementation 'org.jetbrains:annotations:20.1.0'


	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// 스프링 스큐리티 테스트
	testImplementation 'org.springframework.security:spring-security-test'

	// 4. mockMVC에 rest docs 추가하기_Spring Rest Docs
//	testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc')

	// 5. *.adoc 파일의 {snippets}를 자동으로 설정 - 아래에서 자세히 설명_Spring Rest Docs
//	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.3.RELEASE'
//	asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.5.RELEASE'
	asciidoctor "org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.5.RELEASE"
	testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc:2.0.5.RELEASE"
//	testImplementation 'org.junit.jupiter:junit-jupiter:5.5.2'
//	testCompile group: 'org.springframework.restdocs', name: 'spring-restdocs-mockmvc', version: '2.0.2.RELEASE' // (5)
//	testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
//	testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.5.RELEASE'
	testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2'
	testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.2'

	implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0.1'

	implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

	implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.1'

	// MySql
	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.16'

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	annotationProcessor(
			"javax.persistence:javax.persistence-api",
			"javax.annotation:javax.annotation-api",
			"com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

}

test {
	useJUnitPlatform()
}

//====================================================================================================Querydsl_Start
sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
		}
	}
}
//querydsl 추가 끝
//====================================================================================================Querydsl_End


